$date
	Fri Jun 06 19:38:58 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module RISCVunicycle_tb $end
$var wire 1 ! tb_finish_flag $end
$var parameter 32 " CLK_PERIOD $end
$var reg 1 # clock $end
$var reg 1 $ rst $end
$scope module dut $end
$var wire 1 # clock $end
$var wire 1 ! finish_flag $end
$var wire 1 $ rst $end
$var wire 1 % zero_test_out $end
$var wire 1 & zero_test $end
$var wire 1 ' reg_write_en_ctrl $end
$var wire 2 ( pc_src_ctrl [1:0] $end
$var wire 7 ) opcode_from_instr [6:0] $end
$var wire 1 * mem_write_en_ctrl $end
$var wire 2 + mem_to_reg_sel_ctrl [1:0] $end
$var wire 1 , mem_read_en_ctrl $end
$var wire 1 - last_instr_to_control $end
$var wire 1 . jalr_active_out $end
$var wire 1 / jal_active_out $end
$var wire 32 0 instruction_to_control [31:0] $end
$var wire 7 1 funct7_from_instr [6:0] $end
$var wire 3 2 funct3_from_instr [2:0] $end
$var wire 32 3 current_pc_out [31:0] $end
$var wire 1 4 branch_en_ctrl $end
$var wire 1 5 alu_zero_to_control $end
$var wire 1 6 alu_src_b_ctrl $end
$var wire 4 7 alu_op_to_datapath [3:0] $end
$scope module ctrl_inst $end
$var wire 1 # clk $end
$var wire 3 8 funct3 [2:0] $end
$var wire 7 9 funct7 [6:0] $end
$var wire 7 : opcode [6:0] $end
$var wire 1 $ rst $end
$var wire 1 - last_instr_flag_in $end
$var wire 32 ; current_pc_in [31:0] $end
$var wire 1 5 alu_zero_flag_in $end
$var wire 4 < alu_op_out [3:0] $end
$var reg 1 6 alu_src_b_out $end
$var reg 1 4 branch_en_out $end
$var reg 1 / jal_active_out $end
$var reg 1 . jalr_active_out $end
$var reg 1 , mem_read_en_out $end
$var reg 2 = mem_to_reg_sel_out [1:0] $end
$var reg 1 * mem_write_en_out $end
$var reg 2 > pc_src_out [1:0] $end
$var reg 1 ' reg_write_en_out $end
$var reg 1 & zero_test_out $end
$scope module alu_ctrl_inst $end
$var wire 3 ? funct3 [2:0] $end
$var wire 7 @ funct7 [6:0] $end
$var wire 7 A opcode [6:0] $end
$var wire 1 $ rst $end
$var wire 1 - last_instr_flag_in $end
$var reg 4 B alu_op [3:0] $end
$upscope $end
$upscope $end
$scope module dp_inst $end
$var wire 4 C alu_op_ctrl [3:0] $end
$var wire 1 6 alu_src_b $end
$var wire 1 4 branch_en $end
$var wire 1 # clk $end
$var wire 32 D current_pc_out [31:0] $end
$var wire 32 E instruction_out [31:0] $end
$var wire 1 / jal_active $end
$var wire 1 . jalr_active $end
$var wire 32 F jump_addr_val [31:0] $end
$var wire 32 G mem_address [31:0] $end
$var wire 1 , mem_read_en $end
$var wire 2 H mem_to_reg_sel [1:0] $end
$var wire 32 I mem_write_data [31:0] $end
$var wire 1 * mem_write_en $end
$var wire 2 J pc_sel [1:0] $end
$var wire 1 K pc_write_en $end
$var wire 1 ' reg_write_en $end
$var wire 1 $ rst $end
$var wire 1 % zero_test_signal $end
$var wire 32 L sign_extended_imm [31:0] $end
$var wire 5 M rs2_addr [4:0] $end
$var wire 5 N rs1_addr [4:0] $end
$var wire 32 O reg_data_2 [31:0] $end
$var wire 32 P reg_data_1 [31:0] $end
$var wire 5 Q rd_addr [4:0] $end
$var wire 32 R pc_plus_4_val [31:0] $end
$var wire 32 S pc_current_val [31:0] $end
$var wire 32 T mem_read_data_out [31:0] $end
$var wire 1 - last_instr_flag_out $end
$var wire 32 U instr_fetched [31:0] $end
$var wire 32 V branch_addr_val [31:0] $end
$var wire 1 5 alu_zero_flag $end
$var wire 32 W alu_result [31:0] $end
$var reg 32 X alu_input_a [31:0] $end
$var reg 32 Y alu_input_b [31:0] $end
$var reg 32 Z data_to_reg_write [31:0] $end
$var reg 32 [ next_pc_val [31:0] $end
$scope module extensorS $end
$var wire 32 \ instruct [31:0] $end
$var reg 32 ] out [31:0] $end
$var reg 7 ^ typ [6:0] $end
$upscope $end
$scope module modInstm $end
$var wire 32 _ instruct [31:0] $end
$var wire 32 ` addr [31:0] $end
$var reg 32 a d [31:0] $end
$var reg 1 - last_instr_flag $end
$var integer 32 b base [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 c i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 d j [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 e idx [31:0] $end
$upscope $end
$upscope $end
$scope module modPC $end
$var wire 1 # clk $end
$var wire 1 - finish_flag $end
$var wire 32 f next_pc [31:0] $end
$var wire 1 $ reset $end
$var reg 32 g pc_reg [31:0] $end
$upscope $end
$scope module modalu $end
$var wire 32 h A [31:0] $end
$var wire 4 i ALUctl [3:0] $end
$var wire 32 j B [31:0] $end
$var wire 1 - last_instr_flag_in $end
$var wire 1 $ reset $end
$var wire 1 % zero_test $end
$var reg 32 k ALUout [31:0] $end
$var reg 1 l result_ALU $end
$var reg 1 5 zero $end
$upscope $end
$scope module modmemory $end
$var wire 32 m address [31:0] $end
$var wire 1 # clk $end
$var wire 1 , read_enable $end
$var wire 32 n write_data [31:0] $end
$var wire 1 * write_enable $end
$var reg 32 o read_data [31:0] $end
$upscope $end
$scope module modregfile $end
$var wire 5 p Read1 [4:0] $end
$var wire 5 q Read2 [4:0] $end
$var wire 1 ' RegWrite $end
$var wire 32 r WriteData [31:0] $end
$var wire 5 s addr [4:0] $end
$var wire 1 # clock $end
$var wire 1 - finish_flag $end
$var wire 1 $ reset $end
$var wire 32 t Data2 [31:0] $end
$var wire 32 u Data1 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin $unm_blk_4 $end
$var reg 32 v actual_mem_val [31:0] $end
$var reg 32 w actual_x10 [31:0] $end
$var reg 32 x expected_mem_val [31:0] $end
$var reg 32 y expected_x10 [31:0] $end
$var reg 32 z mem_address_to_check [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 "
$end
#0
$dumpvars
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
b0 r
bx q
bx p
bx o
bx n
b0 m
0l
b0 k
bx j
b11 i
bx h
b11111111111111111111111111111100 g
b0 f
b100000 e
b100000 d
b10000000 c
b1111100 b
b0 a
b11111111111111111111111111111100 `
bx _
bx ^
b0 ]
bx \
b0 [
b0 Z
bx Y
bx X
b0 W
b11111111111111111111111111111100 V
bx U
bx T
b11111111111111111111111111111100 S
b0 R
bx Q
bx P
bx O
bx N
bx M
b0 L
1K
b0 J
bx I
b0 H
b0 G
b0 F
bx E
b11111111111111111111111111111100 D
b11 C
b11 B
bx A
bx @
bx ?
b0 >
b0 =
b11 <
b11111111111111111111111111111100 ;
bx :
bx 9
bx 8
b11 7
06
x5
04
b11111111111111111111111111111100 3
bx 2
bx 1
bx 0
0/
0.
0-
0,
b0 +
0*
bx )
b0 (
0'
0&
0%
1$
0#
0!
$end
#5000
1#
#10000
0#
#15000
1#
#20000
b111 Z
b111 r
b111 Y
b111 j
b0 X
b0 h
1l
b111 G
b111 m
b111 F
b111 W
b111 k
16
1'
b0 P
b0 u
b0 I
b0 n
b0 O
b0 t
b10 7
b10 <
b10 B
b10 C
b10 i
b10011 )
b10011 :
b10011 A
b1 Q
b1 s
b0 2
b0 8
b0 ?
b0 N
b0 p
b111 M
b111 q
b0 1
b0 9
b0 @
b111 L
b111 ]
b10011 ^
b100 [
b100 f
b11100000000000010010011 0
b11100000000000010010011 E
b11100000000000010010011 U
b11100000000000010010011 \
b11100000000000010010011 _
b111 V
b100 R
b0 3
b0 ;
b0 D
b0 S
b0 `
b0 g
05
0$
1#
#25000
0#
#30000
b11111111111111111111111111110110 Z
b11111111111111111111111111110110 r
b11111111111111111111111111110110 G
b11111111111111111111111111110110 m
b11111111111111111111111111110110 F
b11111111111111111111111111110110 W
b11111111111111111111111111110110 k
b11111111111111111111111111110110 Y
b11111111111111111111111111110110 j
b10 Q
b10 s
b10110 M
b10110 q
b1111111 1
b1111111 9
b1111111 @
b11111111111111111111111111110110 L
b11111111111111111111111111110110 ]
b1000 [
b1000 f
16
1'
b11111111011000000000000100010011 0
b11111111011000000000000100010011 E
b11111111011000000000000100010011 U
b11111111011000000000000100010011 \
b11111111011000000000000100010011 _
b11111111111111111111111111111010 V
b1000 R
b100 3
b100 ;
b100 D
b100 S
b100 `
b100 g
1#
#35000
0#
#40000
b110 T
b110 o
b110 Z
b110 r
b1 G
b1 m
b1 F
b1 W
b1 k
1,
b1 +
b1 =
b1 H
b111 I
b111 n
b111 O
b111 t
b1 Y
b1 j
b11 )
b11 :
b11 A
b100 Q
b100 s
b10 2
b10 8
b10 ?
b1 M
b1 q
b0 1
b0 9
b0 @
b1 L
b1 ]
b11 ^
b1100 [
b1100 f
16
1'
b100000010001000000011 0
b100000010001000000011 E
b100000010001000000011 U
b100000010001000000011 \
b100000010001000000011 _
b1001 V
b1100 R
b1000 3
b1000 ;
b1000 D
b1000 S
b1000 `
b1000 g
1#
#45000
0#
#50000
b1 Z
b1 r
b1 T
b1 o
b11 G
b11 m
b11 F
b11 W
b11 k
b10 I
b10 n
b10 O
b10 t
b11 Y
b11 j
b101 Q
b101 s
b11 M
b11 q
b11 L
b11 ]
b10000 [
b10000 f
b1 +
b1 =
b1 H
16
1,
1'
b1100000010001010000011 0
b1100000010001010000011 E
b1100000010001010000011 U
b1100000010001010000011 \
b1100000010001010000011 _
b1111 V
b10000 R
b1100 3
b1100 ;
b1100 D
b1100 S
b1100 `
b1100 g
1#
#55000
0#
#60000
b0 Z
b0 r
b0 G
b0 m
b0 F
b0 W
b0 k
b0 I
b0 n
b0 O
b0 t
b0 Y
b0 j
b10011 )
b10011 :
b10011 A
b0 Q
b0 s
b0 2
b0 8
b0 ?
b0 M
b0 q
b0 L
b0 ]
b10011 ^
b10100 [
b10100 f
b0 +
b0 =
b0 H
16
0,
1'
b10011 0
b10011 E
b10011 U
b10011 \
b10011 _
b10000 V
b10100 R
b10000 3
b10000 ;
b10000 D
b10000 S
b10000 `
b10000 g
1#
#65000
0#
#70000
b111 Z
b111 r
b111 G
b111 m
b111 F
b111 W
b111 k
b1 Y
b1 j
b110 X
b110 h
b1 I
b1 n
b1 O
b1 t
b110 P
b110 u
b110011 )
b110011 :
b110011 A
b110 Q
b110 s
b101 M
b101 q
b100 N
b100 p
b110011 ^
b11000 [
b11000 f
06
1'
b10100100000001100110011 0
b10100100000001100110011 E
b10100100000001100110011 U
b10100100000001100110011 \
b10100100000001100110011 _
b10100 V
b11000 R
b10100 3
b10100 ;
b10100 D
b10100 S
b10100 `
b10100 g
1#
#75000
0#
#80000
b1 Z
b1 r
b1 G
b1 m
b1 F
b1 W
b1 k
b0 X
b0 h
1*
16
b111 I
b111 n
b111 O
b111 t
b0 P
b0 u
b100011 )
b100011 :
b100011 A
b1 Q
b1 s
b10 2
b10 8
b10 ?
b110 M
b110 q
b0 N
b0 p
b1 L
b1 ]
b100011 ^
b11100 [
b11100 f
0'
b11000000010000010100011 0
b11000000010000010100011 E
b11000000010000010100011 U
b11000000010000010100011 \
b11000000010000010100011 _
b11001 V
b11100 R
b11000 3
b11000 ;
b11000 D
b11000 S
b11000 `
b11000 g
1#
#85000
0#
#90000
15
b0 Z
b0 r
b111 X
b111 h
b0 G
b0 m
b0 F
b0 W
b0 k
1%
1&
b1 (
b1 >
b1 J
14
b111 P
b111 u
b110 7
b110 <
b110 B
b110 C
b110 i
b111 Y
b111 j
b1100011 )
b1100011 :
b1100011 A
b101 Q
b101 s
b0 2
b0 8
b0 ?
b1 M
b1 q
b110 N
b110 p
b1111111 1
b1111111 9
b1111111 @
b11111111111111111111111111100100 L
b11111111111111111111111111100100 ]
b1100011 ^
b0 [
b0 f
06
0*
b11111110000100110000001011100011 0
b11111110000100110000001011100011 E
b11111110000100110000001011100011 U
b11111110000100110000001011100011 \
b11111110000100110000001011100011 _
b0 V
b100000 R
b11100 3
b11100 ;
b11100 D
b11100 S
b11100 `
b11100 g
1#
#95000
0#
#100000
b111 Z
b111 r
b0 X
b0 h
b111 G
b111 m
b111 F
b111 W
b111 k
16
1'
b0 I
b0 n
b0 O
b0 t
b0 P
b0 u
b10 7
b10 <
b10 B
b10 C
b10 i
05
b10011 )
b10011 :
b10011 A
b1 Q
b1 s
b111 M
b111 q
b0 N
b0 p
b0 1
b0 9
b0 @
b111 L
b111 ]
b10011 ^
b100 [
b100 f
0%
0&
b0 (
b0 >
b0 J
04
b11100000000000010010011 0
b11100000000000010010011 E
b11100000000000010010011 U
b11100000000000010010011 \
b11100000000000010010011 _
b111 V
b100 R
b0 3
b0 ;
b0 D
b0 S
b0 `
b0 g
1#
#105000
0#
#110000
b11111111111111111111111111110110 Z
b11111111111111111111111111110110 r
b11111111111111111111111111110110 G
b11111111111111111111111111110110 m
b11111111111111111111111111110110 F
b11111111111111111111111111110110 W
b11111111111111111111111111110110 k
b11111111111111111111111111110110 Y
b11111111111111111111111111110110 j
b10 Q
b10 s
b10110 M
b10110 q
b1111111 1
b1111111 9
b1111111 @
b11111111111111111111111111110110 L
b11111111111111111111111111110110 ]
b1000 [
b1000 f
16
1'
b11111111011000000000000100010011 0
b11111111011000000000000100010011 E
b11111111011000000000000100010011 U
b11111111011000000000000100010011 \
b11111111011000000000000100010011 _
b11111111111111111111111111111010 V
b1000 R
b100 3
b100 ;
b100 D
b100 S
b100 `
b100 g
1#
#115000
0#
#120000
b111 T
b111 o
b111 Z
b111 r
b1 G
b1 m
b1 F
b1 W
b1 k
1,
b1 +
b1 =
b1 H
b111 I
b111 n
b111 O
b111 t
b1 Y
b1 j
b11 )
b11 :
b11 A
b100 Q
b100 s
b10 2
b10 8
b10 ?
b1 M
b1 q
b0 1
b0 9
b0 @
b1 L
b1 ]
b11 ^
b1100 [
b1100 f
16
1'
b100000010001000000011 0
b100000010001000000011 E
b100000010001000000011 U
b100000010001000000011 \
b100000010001000000011 _
b1001 V
b1100 R
b1000 3
b1000 ;
b1000 D
b1000 S
b1000 `
b1000 g
1#
#125000
0#
#130000
b1 Z
b1 r
b1 T
b1 o
b11 G
b11 m
b11 F
b11 W
b11 k
b10 I
b10 n
b10 O
b10 t
b11 Y
b11 j
b101 Q
b101 s
b11 M
b11 q
b11 L
b11 ]
b10000 [
b10000 f
b1 +
b1 =
b1 H
16
1,
1'
b1100000010001010000011 0
b1100000010001010000011 E
b1100000010001010000011 U
b1100000010001010000011 \
b1100000010001010000011 _
b1111 V
b10000 R
b1100 3
b1100 ;
b1100 D
b1100 S
b1100 `
b1100 g
1#
#135000
0#
#140000
b0 Z
b0 r
b0 G
b0 m
b0 F
b0 W
b0 k
b0 I
b0 n
b0 O
b0 t
b0 Y
b0 j
b10011 )
b10011 :
b10011 A
b0 Q
b0 s
b0 2
b0 8
b0 ?
b0 M
b0 q
b0 L
b0 ]
b10011 ^
b10100 [
b10100 f
b0 +
b0 =
b0 H
16
0,
1'
b10011 0
b10011 E
b10011 U
b10011 \
b10011 _
b10000 V
b10100 R
b10000 3
b10000 ;
b10000 D
b10000 S
b10000 `
b10000 g
1#
#145000
0#
#150000
b1000 Z
b1000 r
b1000 G
b1000 m
b1000 F
b1000 W
b1000 k
b1 Y
b1 j
b111 X
b111 h
b1 I
b1 n
b1 O
b1 t
b111 P
b111 u
b110011 )
b110011 :
b110011 A
b110 Q
b110 s
b101 M
b101 q
b100 N
b100 p
b110011 ^
b11000 [
b11000 f
06
1'
b10100100000001100110011 0
b10100100000001100110011 E
b10100100000001100110011 U
b10100100000001100110011 \
b10100100000001100110011 _
b10100 V
b11000 R
b10100 3
b10100 ;
b10100 D
b10100 S
b10100 `
b10100 g
1#
#155000
0#
#160000
b1 Z
b1 r
b1 G
b1 m
b1 F
b1 W
b1 k
b0 X
b0 h
1*
16
b1000 I
b1000 n
b1000 O
b1000 t
b0 P
b0 u
b100011 )
b100011 :
b100011 A
b1 Q
b1 s
b10 2
b10 8
b10 ?
b110 M
b110 q
b0 N
b0 p
b1 L
b1 ]
b100011 ^
b11100 [
b11100 f
0'
b11000000010000010100011 0
b11000000010000010100011 E
b11000000010000010100011 U
b11000000010000010100011 \
b11000000010000010100011 _
b11001 V
b11100 R
b11000 3
b11000 ;
b11000 D
b11000 S
b11000 `
b11000 g
1#
#165000
0#
#170000
b1 Z
b1 r
b1000 X
b1000 h
b1 G
b1 m
b1 F
b1 W
b1 k
1%
1&
b1 (
b1 >
b1 J
14
b111 I
b111 n
b111 O
b111 t
b1000 P
b1000 u
b110 7
b110 <
b110 B
b110 C
b110 i
b111 Y
b111 j
b1100011 )
b1100011 :
b1100011 A
b101 Q
b101 s
b0 2
b0 8
b0 ?
b1 M
b1 q
b110 N
b110 p
b1111111 1
b1111111 9
b1111111 @
b11111111111111111111111111100100 L
b11111111111111111111111111100100 ]
b1100011 ^
b100000 [
b100000 f
06
0*
b11111110000100110000001011100011 0
b11111110000100110000001011100011 E
b11111110000100110000001011100011 U
b11111110000100110000001011100011 \
b11111110000100110000001011100011 _
b0 V
b100000 R
b11100 3
b11100 ;
b11100 D
b11100 S
b11100 `
b11100 g
1#
#175000
0#
#180000
b1010 Z
b1010 r
b1010 Y
b1010 j
b0 X
b0 h
b1010 G
b1010 m
b1010 F
b1010 W
b1010 k
16
1'
b1 I
b1 n
b1 O
b1 t
b0 P
b0 u
b10 7
b10 <
b10 B
b10 C
b10 i
b10011 )
b10011 :
b10011 A
b1000 Q
b1000 s
b1010 M
b1010 q
b0 N
b0 p
b0 1
b0 9
b0 @
b1010 L
b1010 ]
b10011 ^
b100100 [
b100100 f
0%
0&
b0 (
b0 >
b0 J
04
b101000000000010000010011 0
b101000000000010000010011 E
b101000000000010000010011 U
b101000000000010000010011 \
b101000000000010000010011 _
b101010 V
b100100 R
b100000 3
b100000 ;
b100000 D
b100000 S
b100000 `
b100000 g
1#
#185000
0#
#190000
0l
b0 Z
b0 r
b0 I
b0 n
b0 O
b0 t
b11 7
b11 <
b11 B
b11 C
b11 i
b0 G
b0 m
b0 F
b0 W
b0 k
b1111111 )
b1111111 :
b1111111 A
b11111 Q
b11111 s
b111 2
b111 8
b111 ?
b11111 N
b11111 p
b11111 M
b11111 q
b1111111 1
b1111111 9
b1111111 @
b0 L
b0 ]
b1111111 ^
b101000 [
b101000 f
b0 Y
b0 j
06
0'
1!
1-
b11111111111111111111111111111111 0
b11111111111111111111111111111111 E
b11111111111111111111111111111111 U
b11111111111111111111111111111111 \
b11111111111111111111111111111111 _
b100100 V
b101000 R
b100100 3
b100100 ;
b100100 D
b100100 S
b100100 `
b100100 g
1#
#195000
0#
#200000
1#
